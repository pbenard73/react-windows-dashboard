{"version":3,"sources":["Window.js","Windows.js","windows/Installation.js","components/Code.js","reduxers/main.js","thunks/main.js","hocs/main.js","windows/CreateDashboard.js","code/start_dashboard.js","code/start_main.js","partials/startDashboard.js","windows/StartContext.js","code/start_reduxer.js","code/start_thunks.js","code/start_hoc.js","code/start_index.js","windows/Decorator.js","code/decorator.js","windows/Options.js","windows/Ordering.js","partials/windowManager.js","containers/Dashboard.js","containers/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Window","props","state","full","onResizeStart","bind","toggle","onStart","data","options","undefined","resizable","size","minSize","sizableOptions","width","height","minConstraints","resizeHandles","direction","style","position","check","type","center","wrapper","document","querySelector","centering","isLeft","value","offsetWidth","offsetHeight","left","top","checkPosition","maxConstraints","ref","React","createRef","e","preventDefault","this","setState","minimize","actions","getExtraActions","getBaseActions","className","title","onClick","onClose","children","decorator","getBaseWindow","target","closest","setActive","active","minimized","order","zIndex","cancel","defaultClassName","bounds","id","uuid","renderInnerWindow","Component","Windows","windows","windowStyle","border","background","borderRadius","onWindowClose","externalActive","dashboard","Object","keys","map","indexOf","toggleActive","component","Installation","Code","language","prism","content","mainReduxer","setOrder","setWindows","thunks","addWindows","windowData","dispatch","getState","push","removeWindow","index","splice","hoc","hocBuilder","reduxers","bindAll","CreateDashboard","container","md","lg","xs","action","openCreateDashboardBindThis","openCreateDashboard","StartDashboard","Decorator","Options","Ordering","WindowManager","startDashboard","openInstallationBindThis","openStartContextBindThis","StartContext","openOptionsBindThis","openDecoratorBindThis","openOrderingBindThis","Dashboard","menuStart","menuConfig","menuOverride","callback","Button","Menu","anchorEl","open","MenuItem","close","openInstallation","openStartContext","openOptions","openDecorator","openOrdering","backgroundImage","AppBar","Toolbar","variant","src","alt","renderMenuStart","renderMenuConfig","renderMenuOverride","Main","App","hocs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"uVA6KeA,G,yDArKX,WAAYC,GAAQ,IAAD,uBACf,cAAMA,IACDC,MAAQ,CACTC,MAAM,GAGV,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,OAAS,EAAKA,OAAOD,KAAZ,gBACd,EAAKE,QAAU,EAAKA,QAAQF,KAAb,gBAEf,IAAMG,EAAO,EAAKP,MAAMO,KACxB,EAAKC,aAA2BC,IAAjBF,EAAKC,QAAwB,GAAKD,EAAKC,QACtD,EAAKE,WAAuC,IAA3B,EAAKF,QAAQE,UAC9B,EAAKC,UAA6BF,IAAtB,EAAKD,QAAQG,KAAqB,EAAKH,QAAQG,KAAO,KAClE,EAAKC,aACwBH,IAAzB,EAAKD,QAAQI,QAAwB,EAAKJ,QAAQI,QAAwB,OAAd,EAAKD,KAAgB,EAAKA,KAAO,CAAC,IAAK,KAfxF,OAqDf,EAAKE,eAAiB,CAClBC,MAAO,EAAKF,QAAQ,GACpBG,OAAQ,EAAKH,QAAQ,GACrBI,eAAgB,EAAKJ,QACrBT,cAAe,EAAKA,cACpBc,eACuB,IAAnB,EAAKP,UAAsB,QAAgCD,IAA3B,EAAKD,QAAQU,UAA0B,EAAKV,QAAQU,UAAY,CAAC,MACrGC,MAAM,aACFC,SAAU,YA5CI,WAClB,IAAMC,EAAQ,SAAAC,GACV,YAAmBb,IAAfF,EAAKe,GACE,QAGe,oBAAff,EAAKe,GACLf,EAAKe,KAGTf,EAAKe,IAGhB,GAA6B,oBAAlBf,EAAKa,SACZ,OAAOb,EAAKa,WACT,IAAoB,IAAhBb,EAAKgB,OAAiB,CAC7B,IAAMC,EAAUC,SAASC,cAAc,YAGjCC,GAFqB,OAAd,EAAKhB,KAAgB,EAAKC,QAAU,EAAKD,KAEpC,WAAoB,IAAnBiB,IAAkB,yDAC3BC,IACU,IAAXD,EAAkBJ,EAAQM,YAAcN,EAAQO,cAAgB,EACjE,EAAKpB,MAAgB,IAAXiB,EAAkB,EAAI,GAAK,EAEzC,OAAQC,EAAQ,EAAI,EAAIA,GAAS,OAGrC,MAAO,CAAEG,KAAML,IAAaM,IAAKN,GAAU,IAG/C,MAAO,CACHK,KAAMX,EAAM,QACZY,IAAKZ,EAAM,QAaRa,MAIY,IAAnB,EAAKxB,YACL,EAAKG,eAAesB,eAAiB,EAAKtB,eAAeG,gBAG3C,OAAd,EAAKL,OACL,EAAKE,eAAeC,MAAQ,EAAKH,KAAK,GACtC,EAAKE,eAAeE,OAAS,EAAKJ,KAAK,IAG3C,EAAKyB,IAAMC,IAAMC,YA3EF,E,0DA8ELC,GACVA,EAAEC,mB,+BAIFC,KAAKC,SAAS,CAAExC,MAAOuC,KAAKxC,MAAMC,S,uCAIlC,IAAIK,EAAI,2BACDkC,KAAKzC,OADJ,IAEJK,OAAQoC,KAAKpC,OACbK,UAAW+B,KAAK/B,UAChBiC,SAAUF,KAAKzC,MAAM2C,WAKzB,OAFApC,EAAKqC,QAAUH,KAAKI,gBAAgBtC,GAE7BA,I,sCAGKP,GACZ,YAA8BS,IAAvBT,EAAMO,KAAKqC,QAAwB5C,EAAMO,KAAKqC,QAAQ5C,GAAS,K,sCAG5B,IAAhCA,EAA+B,uDAAvByC,KAAKK,iBACvB,OACI,sBAAKC,UAAU,SAAS5B,MAAOnB,EAAMmB,MAArC,UACI,sBAAK4B,UAAU,YAAf,UACI,sBAAMA,UAAU,QAAhB,SAAyB/C,EAAMO,KAAKyC,QACnCP,KAAKI,gBAAgB7C,IACF,IAAnByC,KAAK/B,UAAsB,KACxB,sBAAMqC,UAAU,0BAA0BE,QAASjD,EAAMK,SAE7D,sBAAM0C,UAAU,yBAAyBE,QAASjD,EAAMkD,aAE5D,qBAAKH,UAAU,iBAAf,SAAiC/C,EAAMmD,gB,0CAM/C,YAAgC1C,IAAzBgC,KAAKzC,MAAMoD,UAA0BX,KAAKY,gBAAkBZ,KAAKzC,MAAMoD,UAAUX,KAAKK,oB,8BAGzFP,GACJ,GAAoC,OAAhCA,EAAEe,OAAOC,QAAQ,WACjB,OAAO,EAGXd,KAAKzC,MAAMwD,c,+BAIX,IAAIT,EAAY,oCACQ,IAApBN,KAAKxC,MAAMC,OACX6C,GAAa,gBAGS,IAAtBN,KAAKzC,MAAMyD,SACXV,GAAa,mBAGY,IAAzBN,KAAKzC,MAAM0D,YACXX,GAAa,qBAGjB,IAAIvC,EAAO,eAAQiC,KAAK5B,gBAKxB,YAJyBJ,IAArBgC,KAAKzC,MAAM2D,QACXnD,EAAQW,MAAMyC,OAASnB,KAAKzC,MAAM2D,OAIlC,cAAC,IAAD,CACIE,OAAO,mCACPvD,QAASmC,KAAKnC,QACdwD,iBAAkBf,EAClBgB,YAAgCtD,IAAxBgC,KAAKjC,QAAQuD,OAAuBtB,KAAKjC,QAAQuD,OAAS,aAJtE,SAMI,cAAC,eAAD,2BAAkBtB,KAAK5B,gBAAvB,IAAuCmD,GAAIvB,KAAKzC,MAAMO,KAAK0D,KAA3D,SACKxB,KAAKyB,6B,GA/JL7B,IAAM8B,YCwEZC,E,kDA1EX,WAAYpE,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACToE,QAAS,GACTZ,OAAQ,MAEZ,EAAKa,YAAc,CACfC,OAAQ,oBACRxD,OAAQ,OACRD,MAAO,OACP0D,WAAY,QACZC,aAAc,OAGlB,EAAKC,cAAgB,EAAKA,cAActE,KAAnB,gBACrB,EAAKuE,oBAAuClE,IAAtB,EAAKT,MAAMyD,aAAiDhD,IAAzB,EAAKT,MAAMwD,UACpE,EAAKb,SAAW,EAAKA,SAASvC,KAAd,gBAhBD,E,0DAmBL6D,QACiBxD,IAAvBgC,KAAKzC,MAAMkD,SACXT,KAAKzC,MAAMkD,QAAQe,K,mCAIdD,GACT,IAA4B,IAAxBvB,KAAKkC,eACL,OAAOlC,KAAKzC,MAAMwD,UAAUQ,GAGhCvB,KAAKC,SAAS,CAAEe,OAAQO,M,+BAGnBA,GACLvB,KAAKzC,MAAM2C,SAASqB,K,+BAGd,IAAD,OAECP,GAAiC,IAAxBhB,KAAKkC,eAA0BlC,KAAKzC,MAAMyD,OAAShB,KAAKxC,MAAMwD,OAC7E,OACI,sBAAKV,UAAU,UAAf,eAC8BtC,IAAzBgC,KAAKzC,MAAM4E,UAA0BnC,KAAKzC,MAAM4E,UAAY,KAC5DC,OAAOC,KAAKrC,KAAKzC,MAAMqE,SAASU,KAAI,SAAAd,GACjC,IAAM1D,EAAO,EAAKP,MAAMqE,QAAQJ,GAC5Bb,EAAY,EAAKpD,MAAMoD,UAC3BA,OAA0B3C,IAAd2C,EAA0B7C,EAAK6C,UAAYA,EACvD,IAAIO,OAAQlD,EAKZ,YAJyBA,IAArB,EAAKT,MAAM2D,QACXA,EAAQ,EAAK3D,MAAM2D,MAAMqB,QAAQf,GAAQ,GAIzC,cAAC,EAAD,CAEIR,OAAQA,IAAWQ,EACnBT,UAAW,kBAAM,EAAKyB,aAAahB,IACnC1D,KAAI,2BAAOA,GAAP,IAAa0D,SACjB9C,MAAO,EAAKmD,YACZX,MAAOA,EACPhB,SAAU,EAAKA,SACfe,WAA2D,KAA/C,EAAK1D,MAAM0D,WAAa,IAAIsB,QAAQf,GAChDf,QAAS,kBAAM,EAAKwB,cAAcT,IAClCb,UAAWA,EAVf,SAYK7C,EAAK2E,WAXDjB,a,GAvDX5B,IAAM8B,W,6CCAbgB,EAJM,kBACpB,+C,iBCUcC,EARF,SAAApF,GACT,OACI,cAAC,IAAD,CAAmBqF,SAAS,aAAalE,MAAOmE,IAAOvC,UAAU,SAAjE,SACK/C,EAAMuF,WCMJC,EAZK,0CAChBvF,MAAQ,CACJoE,QAAS,GACTV,MAAO,IAHK,KAMhBf,QAAU,CACb6C,SAAU,SAACxF,EAAO0D,GAAR,mBAAC,eAAsB1D,GAAvB,IAA8B0D,WACxC+B,WAAY,SAACzF,EAAOoE,GAAR,mBAAC,eAAwBpE,GAAzB,IAAgCoE,e,QC8B9BsB,EAtCA,CACXC,WAAY,SAAAC,GAAU,OAAI,SAACC,EAAUC,EAAUF,GAC3C,IAAI5F,EAAQ8F,IACR1B,EAAO,eAAQpE,EAAMoE,SACrBV,EAAK,YAAO1D,EAAM0D,OAChBM,EAAO4B,EAAW5B,UAEFxD,IAAlB4D,EAAQJ,KACRI,EAAQJ,GAAQ4B,IAGS,IAAzBlC,EAAMqB,QAAQf,IACdN,EAAMqC,KAAK/B,GAGf6B,EAAS,WAAYnC,GACrBmC,EAAS,aAAczB,KAE3B4B,aAAc,SAAAhC,GAAI,OAAI,SAAC6B,EAAUC,EAAU9B,GACvC,IAAIhE,EAAQ8F,IACR1B,EAAO,eAAQpE,EAAMoE,SACrBV,EAAK,YAAO1D,EAAM0D,YAEAlD,IAAlB4D,EAAQJ,YACDI,EAAQJ,UACRI,EAAQJ,IAGnB,IAAMiC,EAAQvC,EAAMqB,QAAQf,IACb,IAAXiC,GACAvC,EAAMwC,OAAOD,EAAO,GAGxBJ,EAAS,WAAYnC,GACrBmC,EAAS,aAAczB,MCrBhB+B,EARHC,qBAAW,CACtBC,SAAU,CAACd,GACXG,SACAnF,QAAS,CACR+F,SAAS,K,iBCCLC,E,uKAEE,OACI,eAAC,IAAD,CAAOC,WAAS,EAACC,GAAI,IAAKC,GAAI,IAA9B,UACI,eAAC,IAAD,CAAOC,GAAI,GAAIF,GAAI,EAAnB,UACI,2DACA,yGAEJ,cAAC,IAAD,CAAOA,GAAI,EAAX,SACI,cAAC,EAAD,CAAMnB,QCnBhB,imBDqBM,eAAC,IAAD,CAAOmB,GAAI,EAAX,UACI,8DACA,+EAEJ,cAAC,IAAD,CAAOA,GAAI,EAAX,SACI,cAAC,EAAD,CAAMnB,QE1BhB,0fF6BM,uF,GAnBclD,IAAM8B,WAyBrBiC,MAAMI,GGhBNK,EAjBA,CACXC,4BAA6B,WACzB,IAAMjB,EAAa,CACf5B,KAAM,kBACNjB,MAAO,iCACPkC,UAAW,cAAC,EAAD,IACX3D,QAAQ,EACRf,QAAS,CACLG,KAAM,CAAC,IAAK,KACZC,QAAS,CAAC,IAAK,OAIvB6B,KAAKzC,MAAM4F,WAAWC,KCFxBV,E,uKACQ,IAAD,OACL,OACI,eAAC,WAAD,WACI,iHAEA,kDACd,yCAAW,2CAAX,sCACc,cAAC,EAAD,CAAMI,QCrBZ,mODuBM,iDACd,4EACc,cAAC,EAAD,CAAMA,QEzBZ,gtBF2BM,8CACd,uDACc,cAAC,EAAD,CAAMA,QG7BZ,2TH+BM,2DACd,sEACc,cAAC,EAAD,CAAMA,QIjCZ,0WJmCR,mBAAGtC,QAAS,kBAAM,EAAK8D,uBAAvB,qD,GAtByB1E,IAAM8B,WA4BlBiC,MAAMjB,EAAc6B,GKtBpBC,EAbG,kBACd,eAAC,WAAD,WACI,4FAC+D,2CAD/D,oEAKA,mFAEA,cAAC,EAAD,CAAM1B,QCfJ,4eCkHK2B,EA5GC,kBACZ,eAAC,IAAD,CAAOT,WAAS,EAACC,GAAI,IAAM3D,UAAU,UAArC,UACI,cAAC,IAAD,CAAO2D,GAAI,EAAX,SACI,gCACI,iDACA,+BACI,yCACA,oFACA,2CACA,+BACI,sBAAM3D,UAAU,WAAhB,sBADJ,IAC+C,uBAD/C,qDAIA,yCACA,gFACA,wCACA,+BACI,sBAAMA,UAAU,WAAhB,sBADJ,IAC+C,uBAD/C,iCAIA,2CACA,+BACI,sBAAMA,UAAU,WAAhB,sBADJ,IAC+C,uBAD/C,qEAIA,0CACA,+BACI,sBAAMA,UAAU,WAAhB,sBADJ,IAC+C,uBAD/C,yDAIA,uCACA,+BACI,sBAAMA,UAAU,WAAhB,sBADJ,IAC+C,uBAD/C,gEAIA,2CACA,+BACI,sBAAMA,UAAU,WAAhB,sBADJ,IAC+C,uBAD/C,4CAIA,2CACA,+BACI,sBAAMA,UAAU,WAAhB,sBADJ,IAC+C,uBAD/C,yEAOZ,cAAC,IAAD,CAAO2D,GAAI,EAAX,SACI,gCACI,gDAEA,+BACI,sCACA,mDACA,uCACA,+BACI,sBAAM3D,UAAU,WAAhB,sBADJ,IAC+C,uBAD/C,yBAIA,2CACA,+BACI,sBAAMA,UAAU,WAAhB,sBADJ,IAC+C,uBAD/C,oCAIA,wCACA,+BACI,sBAAMA,UAAU,WAAhB,sBADJ,IAC+C,uBAD/C,uCAIA,0CACA,+BACI,sBAAMA,UAAU,WAAhB,sBADJ,IAC+C,uBAD/C,2EAIA,2CACA,+BACI,sBAAMA,UAAU,WAAhB,sBADJ,IAC+C,uBAD/C,mGAIA,yCACA,+BACI,sBAAMA,UAAU,WAAhB,sBADJ,UAEI,+BACI,2CACA,+EACA,sCACA,6FACA,yCACA,6FACA,wCACA,+BACI,mEACA,uBAFJ,mFAMR,yCACA,+BACI,sBAAMA,UAAU,WAAhB,sBADJ,IAC+C,uBAD/C,uEC9FLoE,EANE,kBACb,cAAC,WAAD,UACH,8JCuEcC,EAtEI,2BACZC,GADY,IAEfC,yBAFe,WAGX,IAAMzB,EAAa,CACf5B,KAAM,eACNjB,MAAO,eACPkC,UAAW,cAAC,EAAD,IACX3D,QAAQ,GAGZkB,KAAKzC,MAAM4F,WAAWC,IAE1B0B,yBAZe,WAaX,IAAM1B,EAAa,CACf5B,KAAM,gBACNjB,MAAO,+BACPkC,UAAW,cAACsC,EAAD,IACXjG,QAAQ,EACRf,QAAS,CACLG,KAAM,CAAC,IAAK,KACZC,QAAS,CAAC,IAAK,OAIvB6B,KAAKzC,MAAM4F,WAAWC,IAE1B4B,oBA1Be,WA2BX,IAAM5B,EAAa,CACf5B,KAAM,UACNjB,MAAO,qBACPkC,UAAW,cAAC,EAAD,IACX3D,QAAQ,EACRf,QAAS,CACLG,KAAM,CAAC,IAAK,KACZC,QAAS,CAAC,IAAK,OAIvB6B,KAAKzC,MAAM4F,WAAWC,IAE1B6B,sBAxCe,WAyCX,IAAM7B,EAAa,CACf5B,KAAM,YACNjB,MAAO,kCACPkC,UAAW,cAAC,EAAD,IACX3D,QAAQ,EACRf,QAAS,CACLG,KAAM,CAAC,IAAK,KACZC,QAAS,CAAC,IAAK,OAIvB6B,KAAKzC,MAAM4F,WAAWC,IAE1B8B,qBAtDe,WAuDX,IAAM9B,EAAa,CACf5B,KAAM,WACNjB,MAAO,wCACPkC,UAAW,cAAC,EAAD,IACX3D,QAAQ,EACRf,QAAS,CACLG,KAAM,CAAC,IAAK,KACZC,QAAS,CAAC,IAAK,OAIvB6B,KAAKzC,MAAM4F,WAAWC,MC3DxB+B,G,yDACF,WAAY5H,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACT4H,UAAW,KACXC,WAAY,KACZC,aAAc,MALH,E,0DASLC,GACjBvF,KAAKC,SAAS,CACHmF,UAAW,KACXC,WAAY,KACZC,aAAc,OACtB,kBAAMC,S,wCAGa,IAAD,OACd,OACI,eAAC,WAAD,WACI,cAACC,EAAA,EAAD,CAAQhF,QAAS,SAAAV,GAAC,OAAI,EAAKG,SAAS,CAACmF,UAAWtF,EAAEe,UAAlD,yBAC0B,OAAzBb,KAAKxC,MAAM4H,UAAqB,KAC7B,eAACK,EAAA,EAAD,CAAMC,SAAU1F,KAAKxC,MAAM4H,UAAWO,MAAM,EAAMlF,QAAS,kBAAM,EAAKR,SAAS,CAAEmF,UAAW,QAA5F,UACjB,cAACQ,EAAA,EAAD,CAAUpF,QAAS,kBAAM,EAAKqF,MAAM,EAAKC,mBAAzC,0BACA,cAACF,EAAA,EAAD,CAAUpF,QAAS,kBAAM,EAAKqF,MAAM,EAAKE,mBAAzC,qCACA,cAACH,EAAA,EAAD,CAAUpF,QAAS,kBAAM,EAAKqF,MAAM,EAAKvB,sBAAzC,+C,yCAOqB,IAAD,OACf,OACI,eAAC,WAAD,WACI,cAACkB,EAAA,EAAD,CAAQhF,QAAS,SAAAV,GAAC,OAAI,EAAKG,SAAS,CAACoF,WAAYvF,EAAEe,UAAnD,2BAC2B,OAA1Bb,KAAKxC,MAAM6H,WAAsB,KAC9B,cAACI,EAAA,EAAD,CAAMC,SAAU1F,KAAKxC,MAAM6H,WAAYM,MAAM,EAAMlF,QAAS,kBAAM,EAAKR,SAAS,CAAEoF,WAAY,QAA9F,SACjB,cAACO,EAAA,EAAD,CAAUpF,QAAS,kBAAM,EAAKqF,MAAM,EAAKG,cAAzC,uC,2CAOuB,IAAD,OACjB,OACI,eAAC,WAAD,WACI,cAACR,EAAA,EAAD,CAAQhF,QAAS,SAAAV,GAAC,OAAI,EAAKG,SAAS,CAACqF,aAAcxF,EAAEe,UAArD,uBAC6B,OAA5Bb,KAAKxC,MAAM8H,aAAwB,KAChC,eAACG,EAAA,EAAD,CACIC,SAAU1F,KAAKxC,MAAM8H,aACrBK,MAAM,EACNlF,QAAS,kBAAM,EAAKR,SAAS,CAAEqF,aAAc,QAHjD,UAKjB,cAACM,EAAA,EAAD,CAAUpF,QAAS,kBAAM,EAAKqF,MAAM,EAAKI,gBAAzC,yCACA,cAACL,EAAA,EAAD,CAAUpF,QAAS,kBAAM,EAAKqF,MAAM,EAAKK,eAAzC,2D,+BAQK,OACI,qBAAK5F,UAAU,YAAY5B,MAAO,CAAEyH,gBAAiB,gDAArD,SACI,cAACC,EAAA,EAAD,CAAQzH,SAAS,SAAS2B,UAAU,SAApC,SACI,eAAC+F,EAAA,EAAD,CAASC,QAAQ,QAAjB,UACI,qBAAKhG,UAAU,OAAf,SACI,qBAAKiG,IAAI,oCAAoCC,IAAI,WAEpDxG,KAAKyG,kBACLzG,KAAK0G,mBACL1G,KAAK2G,gC,GA1EN/G,IAAM8B,YAkFfiC,MAAMwB,EAAWR,GC1F1BiC,E,uKAEE,IAAMzE,EAAY,cAAC,EAAD,IAElB,OACI,qBAAK7B,UAAU,MAAf,SACI,cAAC,EAAD,CAAS6B,UAAWA,EAAWP,QAAO,eAAM5B,KAAKzC,MAAMqE,SAAUnB,QAAST,KAAKzC,MAAMiG,qB,GANlF5D,IAAM8B,WAYViC,MAAMiD,GCJNC,MARf,WACI,OACI,cAAC,QAAD,CAAOC,KAAM,CAACnD,GAAK,GAAnB,SACI,cAAC,EAAD,OCGGoD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,EAAD,IACFzI,SAAS0I,eAAe,SAM1BX,M","file":"static/js/main.a61c34fd.chunk.js","sourcesContent":["import React from \"react\"\n\nimport Draggable from \"react-draggable\"\nimport { Resizable, ResizableBox } from \"react-resizable\"\n\nimport \"./styles/Windows.scss\"\n\nclass Window extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            full: false,\n        }\n\n        this.onResizeStart = this.onResizeStart.bind(this)\n        this.toggle = this.toggle.bind(this)\n        this.onStart = this.onStart.bind(this)\n\n        const data = this.props.data\n        this.options = data.options === undefined ? {} : data.options\n        this.resizable = this.options.resizable !== false\n        this.size = this.options.size !== undefined ? this.options.size : null\n        this.minSize =\n            this.options.minSize !== undefined ? this.options.minSize : this.size !== null ? this.size : [300, 300]\n\n        const checkPosition = () => {\n            const check = type => {\n                if (data[type] === undefined) {\n                    return \"100px\"\n                }\n\n                if (typeof data[type] === \"function\") {\n                    return data[type]()\n                }\n\n                return data[type]\n            }\n\n            if (typeof data.position === \"function\") {\n                return data.position()\n            } else if (data.center === true) {\n                const wrapper = document.querySelector(\".windows\")\n                const size = this.size === null ? this.minSize : this.size\n\n                const centering = (isLeft = true) => {\n                    const value =\n                        (isLeft === true ? wrapper.offsetWidth : wrapper.offsetHeight) / 2 -\n                        this.size[isLeft === true ? 0 : 1] / 2\n\n                    return (value < 0 ? 0 : value) + \"px\"\n                }\n\n                return { left: centering(), top: centering(false) }\n            }\n\n            return {\n                left: check(\"left\"),\n                top: check(\"top\"),\n            }\n        }\n\n        this.sizableOptions = {\n            width: this.minSize[0],\n            height: this.minSize[1],\n            minConstraints: this.minSize,\n            onResizeStart: this.onResizeStart,\n            resizeHandles:\n                this.resizable === false ? [] : this.options.direction !== undefined ? this.options.direction : [\"se\"],\n            style: {\n                position: \"absolute\",\n                ...checkPosition(),\n            },\n        }\n\n        if (this.resizable === false) {\n            this.sizableOptions.maxConstraints = this.sizableOptions.minConstraints\n        }\n\n        if (this.size !== null) {\n            this.sizableOptions.width = this.size[0]\n            this.sizableOptions.height = this.size[1]\n        }\n\n        this.ref = React.createRef()\n    }\n\n    onResizeStart(e) {\n        e.preventDefault()\n    }\n\n    toggle() {\n        this.setState({ full: !this.state.full })\n    }\n\n    getBaseActions() {\n        let data = {\n            ...this.props,\n            toggle: this.toggle,\n            resizable: this.resizable,\n            minimize: this.props.minimize,\n        }\n\n        data.actions = this.getExtraActions(data)\n\n        return data\n    }\n\n    getExtraActions(props) {\n        return props.data.actions !== undefined ? props.data.actions(props) : []\n    }\n\n    getBaseWindow(props = this.getBaseActions()) {\n        return (\n            <div className='window' style={props.style}>\n                <div className='decorator'>\n                    <span className='title'>{props.data.title}</span>\n                    {this.getExtraActions(props)}\n                    {this.resizable === false ? null : (\n                        <span className='decorator_toggle nodrag' onClick={props.toggle}></span>\n                    )}\n                    <span className='decorator_close nodrag' onClick={props.onClose}></span>\n                </div>\n                <div className='window_content'>{props.children}</div>\n            </div>\n        )\n    }\n\n    renderInnerWindow() {\n        return this.props.decorator === undefined ? this.getBaseWindow() : this.props.decorator(this.getBaseActions())\n    }\n\n    onStart(e) {\n        if (e.target.closest(\".nodrag\") !== null) {\n            return false\n        }\n\n        this.props.setActive()\n    }\n\n    render() {\n        let className = \"react-draggable window_container\"\n        if (this.state.full === true) {\n            className += \" fullscreen\"\n        }\n\n        if (this.props.active === true) {\n            className += \" window_active\"\n        }\n\n        if (this.props.minimized === true) {\n            className += \" window_minimized\"\n        }\n\n        let options = { ...this.sizableOptions }\n        if (this.props.order !== undefined) {\n            options.style.zIndex = this.props.order\n        }\n\n        return (\n            <Draggable\n                cancel='.react-resizable-handle, .nodrag'\n                onStart={this.onStart}\n                defaultClassName={className}\n                bounds={this.options.bounds !== undefined ? this.options.bounds : \".dashboard\"}\n            >\n                <ResizableBox {...this.sizableOptions} id={this.props.data.uuid}>\n                    {this.renderInnerWindow()}\n                </ResizableBox>\n            </Draggable>\n        )\n    }\n}\n\nexport default Window\n","import React from \"react\"\n\nimport Window from \"./Window\"\n\nclass Windows extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            windows: {},\n            active: null,\n        }\n        this.windowStyle = {\n            border: \"1px solid #e1e1e1\",\n            height: \"100%\",\n            width: \"100%\",\n            background: \"white\",\n            borderRadius: \"2px\",\n        }\n\n        this.onWindowClose = this.onWindowClose.bind(this)\n        this.externalActive = this.props.active !== undefined && this.props.setActive !== undefined\n        this.minimize = this.minimize.bind(this)\n    }\n\n    onWindowClose(uuid) {\n        if (this.props.onClose !== undefined) {\n            this.props.onClose(uuid)\n        }\n    }\n\n    toggleActive(id) {\n        if (this.externalActive === true) {\n            return this.props.setActive(id)\n        }\n\n        this.setState({ active: id })\n    }\n\n    minimize(id) {\n        this.props.minimize(id)\n    }\n\n    render() {\n        //minimized={(this.props.minimized || []).indexOf(uuid) !== -1}\n        const active = this.externalActive === true ? this.props.active : this.state.active\n        return (\n            <div className='windows'>\n                {this.props.dashboard !== undefined ? this.props.dashboard : null}\n                {Object.keys(this.props.windows).map(uuid => {\n                    const data = this.props.windows[uuid]\n                    let decorator = this.props.decorator\n                    decorator = decorator === undefined ? data.decorator : decorator\n                    let order = undefined\n                    if (this.props.order !== undefined) {\n                        order = this.props.order.indexOf(uuid) + 1\n                    }\n\n                    return (\n                        <Window\n                            key={uuid}\n                            active={active === uuid}\n                            setActive={() => this.toggleActive(uuid)}\n                            data={{ ...data, uuid }}\n                            style={this.windowStyle}\n                            order={order}\n                            minimize={this.minimize}\n                            minimized={(this.props.minimized || []).indexOf(uuid) !== -1}\n                            onClose={() => this.onWindowClose(uuid)}\n                            decorator={decorator}\n                        >\n                            {data.component}\n                        </Window>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default Windows\n","const Installation = () => (\n\t<h2>Installation</h2>\t\n)\n\nexport default Installation\n","import { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"\nimport { prism } from \"react-syntax-highlighter/dist/esm/styles/prism\"\n\nconst Code = props => {\n    return (\n        <SyntaxHighlighter language='javascript' style={prism} className=\"mycode\">\n            {props.content}\n        </SyntaxHighlighter>\n    )\n}\n\nexport default Code\n","const mainReduxer = new (class {\n    state = {\n        windows: {},\n        order: [],\n    }\n\n    actions = {\n\tsetOrder: (state, order) => ({...state, order}),\n\tsetWindows: (state, windows) => ({...state, windows}),\n    }\n})()\n\nexport default mainReduxer\n","const thunks = {\n    addWindows: windowData => (dispatch, getState, windowData) => {\n        let state = getState()\n        let windows = { ...state.windows }\n        let order = [...state.order]\n        const uuid = windowData.uuid\n\n        if (windows[uuid] === undefined) {\n            windows[uuid] = windowData\n        }\n\n        if (order.indexOf(uuid) === -1) {\n            order.push(uuid)\n        }\n\n        dispatch(\"setOrder\", order)\n        dispatch(\"setWindows\", windows)\n    },\n    removeWindow: uuid => (dispatch, getState, uuid) => {\n        let state = getState()\n        let windows = { ...state.windows }\n        let order = [...state.order]\n\n        if (windows[uuid] !== undefined) {\n            delete windows[uuid]\n            delete windows[uuid]\n        }\n\n        const index = order.indexOf(uuid)\n        if (index !== -1) {\n            order.splice(index, 1)\n        }\n\n        dispatch(\"setOrder\", order)\n        dispatch(\"setWindows\", windows)\n    },\n}\n\nexport default thunks\n","import { hocBuilder } from 'reactizy'\n\nimport mainReduxer from './../reduxers/main'\nimport thunks from './../thunks/main'\n\nconst hoc = hocBuilder({\n\treduxers: [mainReduxer],\n\tthunks,\n\toptions: {\n\t\tbindAll: true\n\t}\n})\n\nexport default hoc\n","import React, { Fragment } from \"react\"\n\nimport Code from \"./../components/Code\"\n\nimport  Respo  from \"react-respo\"\n\nimport dashboard from \"./../code/start_dashboard\"\nimport main from \"./../code/start_main\"\nimport hoc from \"./../hocs/main\"\n\nclass CreateDashboard extends React.Component {\n    render() {\n        return (\n            <Respo container md={600} lg={1000}>\n                <Respo xs={12} md={4}>\n                    <h3>Create a custom Dashboard</h3>\n                    <p>Create a component filling the screen, with a button opening a window</p>\n                </Respo>\n                <Respo md={8}>\n                    <Code content={dashboard} />\n                </Respo>\n                <Respo md={4}>\n                    <h3>Implement the Main Container</h3>\n                    <p>Register your new dashboard inside your app</p>\n                </Respo>\n                <Respo md={8}>\n                    <Code content={main} />\n                </Respo>\n\n                <p>Well now you can play with your new Dashboard !</p>\n            </Respo>\n        )\n    }\n}\n\nexport default hoc()(CreateDashboard)\n","const code = `// ./containers/Dashboard\nimport React from 'react'\nimport hoc from './../hocs/main'\n\nclass Dashboard extends React.Component {\n\taddNewWindowBindThis() {\n\t\tconst windowData = {\n\t\t\tuuid: Date.now(),\n\t\t\ttitle: 'My Window',\n\t\t\tcomponent: <div>The content of my window</div>\n\t\t}\n\n\t\tthis.props.addWindow(windowData)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"dashboard\" style={{background: 'cyan', width:'100vw', height:'100vh'}}>\n\t\t\t\t<button onClick={this.addNewWindow}>New Window</button>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default hoc()(Dashboard)`\n\nexport default code\n\n","const code = `// ./containers/Main\nimport React from \"react\"\n\nimport Windows from \"./../Windows\"\nimport Dashboard from \"./Dashboard\"\nimport hoc from \"./../hocs/main\"\n\nclass Main extends React.Component {\n    render() {\n        const dashboard = <Dashboard />\n\n        return (\n            <div className='App'>\n                <Windows dashboard={dashboard} windows={{...this.props.windows}} onClose={this.props.removeWindow}/>\n            </div>\n        )\n    }\n}\n\nexport default hoc()(Main)`\n\nexport default code\n\n","import CreateDashboard from \"./../windows/CreateDashboard\"\n\nconst action = {\n    openCreateDashboardBindThis: function () {\n        const windowData = {\n            uuid: \"start_dashboard\",\n            title: \"Get Started : Create Dashboard\",\n            component: <CreateDashboard />,\n            center: true,\n            options: {\n                size: [700, 485],\n                minSize: [300, 100],\n            },\n        }\n\n        this.props.addWindows(windowData)\n    },\n}\n\nexport default action\n","import React, { Fragment } from \"react\"\n\nimport Code from \"./../components/Code\"\n\nimport hoc from \"./../hocs/main\"\n\nimport StartDashboard from \"./../partials/startDashboard\"\n\nimport reduxer from \"./../code/start_reduxer\"\nimport thunks from \"./../code/start_thunks\"\nimport hocCode from \"./../code/start_hoc\"\nimport index from \"./../code/start_index\"\n\nclass Installation extends React.Component {\n    render() {\n        return (\n            <Fragment>\n                <p>In this exemple, the Reactizy library is used in order to increase productivity.</p>\n\n                <h3>Reduxer creation</h3>\n\t\t<p>Set the <code>windows</code> state to list rendered windows.</p>\n                <Code content={reduxer} />\n\n                <h3>Thunks creation</h3>\n\t\t<p>Set the actions to manage rendered windows.</p>\n                <Code content={thunks} />\n\n                <h3>Hoc creation</h3>\n\t\t<p>Create the Reatizy hoc</p>\n                <Code content={hocCode} />\n\n                <h3>Application Implemenation</h3>\n\t\t<p>Register the Reactizy hoc in your app</p>\n                <Code content={index} />\n\n\t\t<p onClick={() => this.openCreateDashboard()}>Well the Dashboard can be create</p>\n            </Fragment>\n        )\n    }\n}\n\nexport default hoc()(Installation, StartDashboard)\n","const code = `// ./reduxers/main\nconst mainReduxer = new (class {\n    state = {\n        windows: {},\n    }\n\n    actions = {\n        setWindows: (state, windows) => ({...state, windows}),\n    }\n})()\n\nexport default mainReduxer`\n\nexport default code\n\n","const code = `// ./thunks/main\nconst thunks = {\n    addWindows: windowData => (dispatch, getState, windowData) => {\n        let state = getState()\n        let windows = { ...state.windows }\n        const uuid = windowData.uuid\n\n        if (windows[uuid] === undefined) {\n            windows[uuid] = windowData\n        }\n\n        dispatch(\"setWindows\", windows)\n    },\n    removeWindow: uuid => (dispatch, getState, uuid) => {\n        let state = getState()\n        let windows = { ...state.windows }\n\n        if (windows[uuid] !== undefined) {\n            windows[uuid] === undefined\n            delete windows[uuid]\n        }\n\n        dispatch(\"setWindows\", windows)\n    },\n}    \n\nexport default thunks`\n\nexport default code\n\n","const code = `// ./hocs/main\nimport { hocBuilder } from 'reactizy'\n\nimport mainReduxer from './../reduxers/main'\nimport thunks from './../thunks/main'\n\nconst hoc = hocBuilder({\n        reduxers: [mainReduxer],\n        thunks,\n        options: {\n                bindAll: true\n        }\n})\n\nexport default hoc`\n\nexport default code\n\n","const code = `// ./App.js\nimport { Store } from \"reactizy\"\nimport Main from \"./containers/Main\" // At this point the Main Container is not created\nimport hoc from \"./hocs/main\"\n\nconst assetPrefix = \"/react-windows-dashboard\"\n\nfunction App() {\n    return (\n        <Store hocs={[hoc, true]}>\n            <Main />\n        </Store>\n    )\n}\n\nexport default App`\n\nexport default code\n\n","import React, { Fragment } from \"react\"\n\nimport Code from \"./../components/Code\"\n\nimport decorator from \"./../code/decorator\"\n\nconst Decorator = () => (\n    <Fragment>\n        <p>\n            Windows Decorator can be customized, one given in the main <code>Windows</code> Component properties, second\n            given in the window data object.\n        </p>\n\n        <p>A decorator is a method with an object as argument</p>\n\n        <Code content={decorator} />\n    </Fragment>\n)\n\nexport default Decorator\n","const code = `(props) => {\n\treturn (\n\t    <div className='window' style={props.style}>\n\t\t<div className='decorator'>\n\t\t    <span className='title'>{props.data.title}</span>\n\t\t    {props.resizable === false ? null : (\n\t\t\t<span className='decorator_toggle nodrag' onClick={props.toggle}></span>\n\t\t    )}\n\t\t    <span className='decorator_close nodrag' onClick={props.onClose}></span>\n\t\t</div>\n\t\t<div className='window_content'>{props.children}</div>\n\t    </div>\n\t)\n}`\n\nexport default code\n","import React, { Fragment } from \"react\"\n\nimport Respo from \"react-respo\"\n\nimport Code from \"./../components/Code\"\n\nconst Options = () => (\n    <Respo container md={1000} className='options'>\n        <Respo md={6}>\n            <div>\n                <h3>Windows Options</h3>\n                <dl>\n                    <dt>windows</dt>\n                    <dd>Object representing the windows uuid => windowData</dd>\n                    <dt>dashboard</dt>\n                    <dd>\n                        <span className='optional'>optional</span> <br />\n                        Component representing the customized dashboard\n                    </dd>\n                    <dt>onClose</dt>\n                    <dd>function performing the close event (uuid) => {}</dd>\n                    <dt>active</dt>\n                    <dd>\n                        <span className='optional'>optional</span> <br />\n                        uuid of the current windows\n                    </dd>\n                    <dt>setActive</dt>\n                    <dd>\n                        <span className='optional'>optional</span> <br />\n                        function performing the activation of focused window (uuid) => {}\n                    </dd>\n                    <dt>minimize</dt>\n                    <dd>\n                        <span className='optional'>optional</span> <br />\n                        function performing the minimizing event (uuid) => {}\n                    </dd>\n                    <dt>order</dt>\n                    <dd>\n                        <span className='optional'>optional</span> <br />\n                        Array representing the order of windows [uuid, (...uuids)]\n                    </dd>\n                    <dt>decorator</dt>\n                    <dd>\n                        <span className='optional'>optional</span> <br />\n                        method rendering the windows decorator\n                    </dd>\n                    <dt>minimized</dt>\n                    <dd>\n                        <span className='optional'>optional</span> <br />\n                        Array representing the minimized windows [uuid, (...uuids)]\n                    </dd>\n                </dl>\n            </div>\n        </Respo>\n        <Respo md={6}>\n            <div>\n                <h3>Window Options</h3>\n\n                <dl>\n                    <dt>uuid</dt>\n                    <dd>unique identifier</dd>\n                    <dt>title</dt>\n                    <dd>\n                        <span className='optional'>optional</span> <br />\n                        Title in the topbar\n                    </dd>\n                    <dt>decorator</dt>\n                    <dd>\n                        <span className='optional'>optional</span> <br />\n                        method rendering the decorator\n                    </dd>\n                    <dt>center</dt>\n                    <dd>\n                        <span className='optional'>optional</span> <br />\n                        render at center of the container\n                    </dd>\n                    <dt>position</dt>\n                    <dd>\n                        <span className='optional'>optional</span> <br />\n                        method returning the position as object {`{left: '10px', top:'10px'}`}\n                    </dd>\n                    <dt>direction</dt>\n                    <dd>\n                        <span className='optional'>optional</span> <br />\n                        Array representing the resizable handler default ['se'] ('e'|'n'|'w'|'s'|'se'|'ne'|'nw'|'sw')\n                    </dd>\n                    <dt>options</dt>\n                    <dd>\n                        <span className='optional'>optional</span> object\n                        <dl>\n                            <dt>resizable</dt>\n                            <dd>At false, the resizable behaviour is disabled</dd>\n                            <dt>size</dt>\n                            <dd>Array of integer representing the [width, height] in pixels</dd>\n                            <dt>minSize</dt>\n                            <dd>Array of integer representing the [width, height] in pixels</dd>\n                            <dt>bounds</dt>\n                            <dd>\n                                <span> className=\"optional\">optionnal</span>\n                                <br /> query selector targeting the container bounds (default : '.dashboard')\n                            </dd>\n                        </dl>\n                    </dd>\n                    <dt>actions</dt>\n                    <dd>\n                        <span className='optional'>optional</span> <br />\n                        Array representing extra actions to add in the topbar\n                    </dd>\n                </dl>\n            </div>\n        </Respo>\n    </Respo>\n)\n\nexport default Options\n","import React, { Fragment } from \"react\"\n\nimport Code from \"./../components/Code\"\n\nconst Ordering = () => (\n    <Fragment>\n\t<p>Initial windows behaviour is to active only the focused window, and order others depending on the time of their rendering.</p>\n    </Fragment>\n)\n\nexport default Ordering\n","import Installation from \"./../windows/Installation\"\nimport StartContext from \"./../windows/StartContext\"\nimport startDashboard from \"./startDashboard\"\nimport Decorator from \"./../windows/Decorator\"\nimport Options from \"./../windows/Options\"\nimport Ordering from \"./../windows/Ordering\"\n\nconst WindowManager = {\n    ...startDashboard,\n    openInstallationBindThis() {\n        const windowData = {\n            uuid: \"installation\",\n            title: \"Installation\",\n            component: <Installation />,\n            center: true,\n        }\n\n        this.props.addWindows(windowData)\n    },\n    openStartContextBindThis() {\n        const windowData = {\n            uuid: \"start_context\",\n            title: \"Get Started : Create Context\",\n            component: <StartContext />,\n            center: true,\n            options: {\n                size: [700, 485],\n                minSize: [300, 100],\n            },\n        }\n\n        this.props.addWindows(windowData)\n    },\n    openOptionsBindThis() {\n        const windowData = {\n            uuid: \"options\",\n            title: \"Components Options\",\n            component: <Options />,\n            center: true,\n            options: {\n                size: [600, 300],\n                minSize: [300, 100],\n            },\n        }\n\n        this.props.addWindows(windowData)\n    },\n    openDecoratorBindThis() {\n        const windowData = {\n            uuid: \"decorator\",\n            title: \"Customize the windows decorator\",\n            component: <Decorator />,\n            center: true,\n            options: {\n                size: [712, 475],\n                minSize: [300, 100],\n            },\n        }\n\n        this.props.addWindows(windowData)\n    },\n    openOrderingBindThis() {\n        const windowData = {\n            uuid: \"ordering\",\n            title: \"Managing the Windows (Order & Active)\",\n            component: <Ordering />,\n            center: true,\n            options: {\n                size: [712, 475],\n                minSize: [300, 100],\n            },\n        }\n\n        this.props.addWindows(windowData)\n    },\n}\n\nexport default WindowManager\n","import React, { Fragment } from \"react\"\n\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Button from \"@material-ui/core/Button\"\nimport Menu from \"@material-ui/core/Menu\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\n\nimport WindowManager from './../partials/windowManager'\n\nimport hoc from './../hocs/main'\n\nimport \"./../styles/Dashboard.scss\"\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            menuStart: null,\n            menuConfig: null,\n            menuOverride: null,\n        }\n    }\n\n    closeBindThis(callback) {\n\tthis.setState({\n            menuStart: null,\n            menuConfig: null,\n            menuOverride: null,\n\t}, () => callback())\n    }\n\n    renderMenuStart() {\n        return (\n            <Fragment>\n                <Button onClick={e => this.setState({menuStart: e.target})}>Get Started</Button>\n                {this.state.menuStart === null ? null : (\n                    <Menu anchorEl={this.state.menuStart} open={true} onClose={() => this.setState({ menuStart: null })}>\n\t\t\t<MenuItem onClick={() => this.close(this.openInstallation)}>Installation</MenuItem>\n\t\t\t<MenuItem onClick={() => this.close(this.openStartContext)}>Part 1 : Create Context</MenuItem>\n\t\t\t<MenuItem onClick={() => this.close(this.openCreateDashboard)}>Part 2 : Create Dashboard</MenuItem>\n                    </Menu>\n                )}\n            </Fragment>\n        )\n    }\n\n    renderMenuConfig() {\n        return (\n            <Fragment>\n                <Button onClick={e => this.setState({menuConfig: e.target})}>Configuration</Button>\n                {this.state.menuConfig === null ? null : (\n                    <Menu anchorEl={this.state.menuConfig} open={true} onClose={() => this.setState({ menuConfig: null })}>\n\t\t\t<MenuItem onClick={() => this.close(this.openOptions)}>Components Options</MenuItem>\n                    </Menu>\n                )}\n            </Fragment>\n        )\n    }\n\n    renderMenuOverride() {\n        return (\n            <Fragment>\n                <Button onClick={e => this.setState({menuOverride: e.target})}>Cook Book</Button>\n                {this.state.menuOverride === null ? null : (\n                    <Menu\n                        anchorEl={this.state.menuOverride}\n                        open={true}\n                        onClose={() => this.setState({ menuOverride: null })}\n                    >\n\t\t\t<MenuItem onClick={() => this.close(this.openDecorator)}>Customize Windows Decorator</MenuItem>\n\t\t\t<MenuItem onClick={() => this.close(this.openOrdering)}>Managing the Windows (Order & Active)</MenuItem>\n                    </Menu>\n                )}\n            </Fragment>\n        )\n    }\n\n    render() {\n        return (\n            <div className='dashboard' style={{ backgroundImage: \"url(/react-windows-dashboard/background.jpg)\" }}>\n                <AppBar position='static' className='topbar'>\n                    <Toolbar variant='dense'>\n                        <div className='logo'>\n                            <img src='/react-windows-dashboard/logo.png' alt='logo' />\n                        </div>\n                        {this.renderMenuStart()}\n                        {this.renderMenuConfig()}\n                        {this.renderMenuOverride()}\n                    </Toolbar>\n                </AppBar>\n            </div>\n        )\n    }\n}\n\nexport default hoc()(Dashboard, WindowManager)\n","import React from \"react\"\n\nimport Windows from \"./../Windows\"\nimport Dashboard from \"./Dashboard\"\nimport hoc from \"./../hocs/main\"\n\nclass Main extends React.Component {\n    render() {\n        const dashboard = <Dashboard />\n\n        return (\n            <div className='App'>\n                <Windows dashboard={dashboard} windows={{...this.props.windows}} onClose={this.props.removeWindow}/>\n            </div>\n        )\n    }\n}\n\nexport default hoc()(Main)\n","import { Store } from \"reactizy\"\nimport Main from \"./containers/Main\"\nimport hoc from \"./hocs/main\"\n\nconst assetPrefix = \"/react-windows-dashboard\"\n\nfunction App() {\n    return (\n        <Store hocs={[hoc, true]}>\n            <Main />\n        </Store>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}