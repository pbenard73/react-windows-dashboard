[{"/home/world40/Workspace/react-windows/src/reportWebVitals.js":"1","/home/world40/Workspace/react-windows/src/Window.js":"2","/home/world40/Workspace/react-windows/src/Windows.js":"3","/home/world40/Workspace/react-windows/src/App.js":"4"},{"size":362,"mtime":1606819831071,"results":"5","hashOfConfig":"6"},{"size":2178,"mtime":1606837883652,"results":"7","hashOfConfig":"6"},{"size":4064,"mtime":1606835811734,"results":"8","hashOfConfig":"6"},{"size":3303,"mtime":1606837521873,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"habezm",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"20"},"/home/world40/Workspace/react-windows/src/reportWebVitals.js",[],["21","22"],"/home/world40/Workspace/react-windows/src/Window.js",["23"],"/home/world40/Workspace/react-windows/src/Windows.js",[],"/home/world40/Workspace/react-windows/src/App.js",["24","25","26","27","28","29","30"],"import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport './styles/Dashboard.scss';\nimport Windows from \"./Windows\";\nimport { Calculator } from 'react-mac-calculator-extra'\n\nconst One = () => <div contenteditable=\"true\">MY DIV </div>;\n\nconst Movie = () => (<iframe style={{width:'100%', height:'100%'}} src=\"https://www.youtube.com/embed/dfTPlsIq7d0\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>)\n\nconst Dashboard = props => {\n    let [bg, setBg] = useState('/pexels-veeterzy-114979.jpg')\n    return (\n        <div className=\"dashboard\" style={{backgroundImage: 'url(' + bg +')'}}>\n            <img src=\"/My computer.png\" onClick={props.add} style={{width: '80px', height:'80px', cursor:'pointer', userSelect:'none'}}/>\n            <img src=\"/calculator-icon.png\" onClick={props.openCalc} style={{width: '80px', height:'80px', cursor:'pointer', userSelect:'none',margin: '10px 0'}}/>\n            <img src=\"/movie.png\" onClick={props.openMovie} style={{width: '80px', height:'80px', cursor:'pointer', userSelect:'none',margin: '10px 0'}}/>\n            <img src=\"/pexels-veeterzy-114979.jpg\" onClick={() => setBg('/pexels-veeterzy-114979.jpg')} style={{width: '80px', height:'80px', cursor:'pointer', userSelect:'none',margin: '10px 0'}}/>\n            <img src=\"/osx.jpg\" onClick={() => setBg('/osx.jpg')} style={{width: '80px', height:'80px', cursor:'pointer', userSelect:'none',margin: '10px 0'}}/>\n            \n        </div>\n    )\n}\n\nlet initialWindows = {\n    one: {\n        component: <One />,\n        title: \"Note\"\n    }\n};\n\nfunction App() {\n    let [windows, setWindows] = useState(initialWindows);\n    let [index, setIndex] = useState(0);\n    const add = () => {\n        const newIndex = index + 1\n        let newW = { ...windows };\n        newW[`t${newIndex}`] = { ...initialWindows.one };\n        setWindows(newW);\n        setIndex(newIndex)\n    };\n\n    const openCalc = () => {\n        const newIndex = index + 1\n        let newW = { ...windows };\n        newW[`t${newIndex}`] = { \n            title: 'Calculator',\n            component: <Calculator />,\n            options: {\n                minSize:[320,490],\n                resizable: false\n            }\n        };\n        setWindows(newW);\n        setIndex(newIndex)\n    }\n\n    const openMovie = () => {\n        const newIndex = index + 1\n        let newW = { ...windows };\n        newW[`t${newIndex}`] = { \n            title: 'Movie',\n            component: <Movie />,\n        };\n        setWindows(newW);\n        setIndex(newIndex)\n    }\n\n    const close = uuid => {\n        let newW = { ...windows }\n        if (newW[uuid] !== undefined) {\n            newW[uuid] = undefined\n            delete newW[uuid]\n        }\n\n        const element = document.querySelector(`#window_wrapper_${uuid} .window`)\n        if (element !== null) {\n            element.classList.add('deleting')\n        }\n\n        setTimeout(() => setWindows(newW), 600)\n    }\n\n    const dashboard = <Dashboard add={add} openCalc={openCalc} openMovie={openMovie}/>\n\n    return (\n        <div className=\"App\">\n            <Windows dashboard={dashboard} onClose={close} windows={windows} />\n        </div>\n    );\n}\n\nexport default App;\n",["31","32"],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":4,"column":10,"nodeType":"39","messageId":"40","endLine":4,"endColumn":19},{"ruleId":"37","severity":1,"message":"41","line":2,"column":8,"nodeType":"39","messageId":"40","endLine":2,"endColumn":12},{"ruleId":"42","severity":1,"message":"43","line":10,"column":22,"nodeType":"44","endLine":10,"endColumn":245},{"ruleId":"45","severity":1,"message":"46","line":16,"column":13,"nodeType":"44","endLine":16,"endColumn":138},{"ruleId":"45","severity":1,"message":"46","line":17,"column":13,"nodeType":"44","endLine":17,"endColumn":164},{"ruleId":"45","severity":1,"message":"46","line":18,"column":13,"nodeType":"44","endLine":18,"endColumn":155},{"ruleId":"45","severity":1,"message":"46","line":19,"column":13,"nodeType":"44","endLine":19,"endColumn":199},{"ruleId":"45","severity":1,"message":"46","line":20,"column":13,"nodeType":"44","endLine":20,"endColumn":161},{"ruleId":"33","replacedBy":"47"},{"ruleId":"35","replacedBy":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'Resizable' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["49"],["50"],"no-global-assign","no-unsafe-negation"]